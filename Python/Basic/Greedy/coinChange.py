# 음식점의 계산을 도와주는 점원입니다.
# 카운터에는 500원, 100원, 50원, 10원짜리 동전이 무한히 존재합니다.
# 손님에게 거슬러 줘야 할 돈이 N원일 때, 거슬러 줘야 할 동전의 최소 개수를 구해야 합니다.
# 거슬러 줘야 할 돈 N은 항상 10의 배수입니다.

# input: n
# output: 동전의 최소 개수

# 핵심: 가장 큰 돈으로 최대한 거슬러준다.
# 그리디 알고리즘 문제에서는 문제 풀이를 위한 최소한의 아이디어를 떠올리고 이것이 정당한지 검토할 수 있어야 답을 도출할 수 있다.
# 이 문제의 정당성: 가지고 있는 동전 중에서 큰 단위가 항상 작은 단위의 배수이므로 작은 단위의 동전들을 종합해 다른 해가 나올 수 없다.

# n = int(input())
n = 1260
count = 0

# 큰 단위의 화폐부터 차례대로 확인
coins = [500, 100, 50, 10]

for coin in coins:
    count += n // coin  # 해당 화폐로 거슬러 줄 수 있는 동전의 개수 세기
    n %= coin  # 해당 화폐로 거스른 후 나머지를 n에 다시 할당

print(count)
