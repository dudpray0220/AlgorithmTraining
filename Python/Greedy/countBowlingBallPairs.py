# [문제 요약]
# - A, B 두 사람이 서로 다른 무게의 볼링공을 고르는 경우의 수 구하기
# - 총 N개의 볼링공이 있고, 각 볼링공의 무게는 1부터 M까지의 자연수
# - 두 사람은 서로 다른 공을 선택해야 함
#
# [문제 해결 방법]
# 1. 무게별로 볼링공 개수를 카운트
# 2. 각 무게마다 해당 무게의 공 개수 * 다른 무게의 공 개수의 합을 구함
# 3. 중복 계산을 피하기 위해 총 경우의 수를 2로 나눔

# 핵심 아이디어
# "왼쪽 사람이 특정 무게 공을 고를 때, 오른쪽 사람은 그 이후 무게 공들 중 아무거나 고르면 된다." 그래서 우리는 "앞에서 누적"으로 계산하면 돼요.

# [예시]
# N=5, M=3, 공의 무게=[1,3,2,3,2]
# - 1무게 공: 1개
# - 2무게 공: 2개
# - 3무게 공: 2개
# 서로 다른 무게의 공을 고르는 경우의 수 = 1*2 + 1*2 + 2*1 + 2*1 + 2*2 = 8

n, m = map(int, input().split())
data = list(map(int, input().split()))

# 1. 무게별 개수 저장 (볼링공 무게가 1부터 m까지니까, 인덱스를 그대로 무게 값으로 쓰기 위해서)
weight_count = [0] * (m + 1)

for x in data:
    # 각 무게에 해당하는 볼링공의 개수 카운트
    weight_count[x] += 1


# 2. 경우의 수 계산
result = 0
for i in range(1, m + 1):
    # 무게가 i인 볼링공의 개수 (A가 선택할 수 있는 개수) 제외 = B가 선택하는 경우의 수
    n -= weight_count[i]

    # B가 선택하는 경우의 수와 곱하기
    result += weight_count[i] * n

print(result)
