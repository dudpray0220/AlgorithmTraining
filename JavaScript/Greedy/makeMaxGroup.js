/**
 * [문제 요약]
 * - 모험가 길드: N명의 모험가를 대상으로 '공포도'를 측정
 * - 공포도가 X인 모험가는 반드시 X명 이상으로 구성한 모험가 그룹에 참여해야 여행 가능
 * - 동빈이는 최대 몇 개의 모험가 그룹을 만들 수 있는지 궁금함
 *
 * [입력 조건]
 * - 첫째 줄: 모험가의 수 N (1 ≤ N ≤ 100,000)
 * - 둘째 줄: 각 모험가의 공포도 (N 이하의 자연수, 공백으로 구분)
 *
 * [예시]
 * - 입력: 5
 *        2 3 1 2 2
 * - 출력: 2
 */

// input: 모험가의 수 N, 공포도 배열
// output: 최대 모험가 그룹 수
// 핵심: 공포도 오름차순 정렬 -> 공포도 낮은 순서대로 확인 -> '현재 그룹에 포함된 모험가'의 수가 '현재 확인하고 있는 공포도'보다 크거나 같다면 그룹으로 설정!

function solution(N, fears) {
  // 공포도를 오름차순으로 정렬
  fears.sort((a, b) => a - b);

  let groupCount = 0; // 그룹 수
  let memberCount = 0; // 현재 그룹의 멤버 수

  // 공포도가 낮은 모험가부터 하나씩 확인
  for (let i = 0; i < N; i++) {
    memberCount++; // 현재 그룹에 모험가 추가

    // 현재 그룹에 포함된 모험가의 수가 현재 모험가의 공포도 이상이라면 그룹 결성
    if (memberCount >= fears[i]) {
      groupCount++; // 그룹 결성
      memberCount = 0; // 현재 그룹 초기화
    }
  }

  return groupCount;
}

// 예시 테스트
const n = 5;
const fears = [2, 3, 1, 2, 2];
console.log(solution(n, fears)); // 출력: 2
