/**
 * [문제 요약]
 * - 정수 N이 입력되면 00시 00분 00초부터 N시 59분 59초까지의 모든 시각 중에서
 *   3이 하나라도 포함되는 모든 경우의 수를 구하는 프로그램
 *
 * [입력 조건]
 * - 첫째 줄에 정수 N이 입력됩니다. (0 <= N <= 23)
 *
 * [출력 조건]
 * - 00시 00분 00초부터 N시 59분 59초까지의 모든 시각 중에서 3이 하나라도 포함되는
 *   모든 경우의 수를 출력합니다.
 *
 * [예시]
 * - 입력: 5
 * - 출력: 11475
 *
 * [문제 접근 방법]
 * - 이 문제는 완전 탐색(Brute Force) 방식으로 해결할 수 있습니다.
 * - 모든 시각(00:00:00 ~ N:59:59)을 하나씩 검사하여 3이 포함되어 있는지 확인합니다.
 */

// input: 시간 범위의 끝 (N시)
// output: 3이 하나라도 포함된 시각의 총 개수
// 핵심: 하루는 86,400초 이므로 브루트 포스 (가능한 경우의 수를 모두 검사해보는 탐색 방법) 이용!
// 시간복잡도: 전체 시간복잡도는 O(24 × 60 × 60) = O(86,400)으로, 이는 입력 크기에 관계없이 상수 시간복잡도로 볼 수 있음!

function countTimesWith3(N) {
  let count = 0;

  // 0시부터 n시까지 순회
  for (let hour = 0; hour <= N; hour++) {
    // 0분부터 59분까지 순회
    for (let minute = 0; minute <= 59; minute++) {
      // 0초부터 59초까지 순회
      for (let second = 0; second <= 59; second++) {
        // 시, 분, 초를 문자열로 변환하여 3이 포함되어 있는지 확인 (문자열 길이가 2보다 작으면 앞에 0을 채움: 2 -> 02)
        const timeStr = `${hour.toString().padStart(2, '0')}${minute
          .toString()
          .padStart(2, '0')}${second.toString().padStart(2, '0')}`;

        // 문자열에 '3'이 포함되어 있다면 카운트 증가
        if (timeStr.includes('3')) {
          count++;
        }
      }
    }
  }

  return count;
}

// 예시 테스트
console.log(countTimesWith3(5)); // 출력: 11475
